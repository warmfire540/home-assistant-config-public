#####
# Handles peristent alerts when alert entity is triggered
# https://community.home-assistant.io/t/in-alert-call-script-via-notify/678275/8
#####

alias: Alert to Persistent
id: 72676c87-8c72-4c0e-98e2-a5562a65dec9

trigger:
  - trigger: event
    id: create
    event_type: call_service
    event_data:
      domain: notify
      service: family

  - trigger: event
    id: create-ai
    event_type: call_service
    event_data:
      domain: notify
      service: family_ai

action:
  choose:
    # if notify.family is used - create a persistent notification as well
    # not triggered if clear_notification used
    - conditions:
        - condition: trigger
          id: create
        - not: "{{ trigger.event.data.service_data.message == 'clear_notification' }}"
      sequence:
        action: persistent_notification.create
        data:
          message: '{{ trigger.event.data.service_data.message }}'
          title: '{{ trigger.event.data.service_data.title }}'
          notification_id: '{{ trigger.event.data.service_data.data.tag }}'

    # if notify.family_ai is used - call ai then notify.family
    # not triggered if clear_notification used
    # not triggered if everyone muted
    - conditions:
        - condition: trigger
          id: create-ai
        - not: "{{ trigger.event.data.service_data.message == 'clear_notification' }}"
        - alias: Someone not muted
          or:
            - condition: state
              entity_id: input_boolean.gina_mute
              state: 'off'
            - condition: state
              entity_id: input_boolean.poat_mute
              state: 'off'
      sequence:
        - alias: Call Google Gemini AI to generate message
          action: google_generative_ai_conversation.generate_content
          continue_on_error: true
          data:
            prompt: >-
              Briefly tell me that my {{ trigger.event.data.service_data.data.prompt }} 
              {{ [
                'in a country accent',
                'in a british accent',
                'in spanish',
                'in german',
                'as samuel jackson',
                'as jar jar binks'
                'as eminem',
                'as yoda',
                'like a medieval herald'
                ] | random
              }}
          response_variable: generated_content
        - alias: Set variable for message
          variables:
            message: >-
              {% set ai_response = generated_content['text'] if (generated_content is defined) else trigger.event.data.service_data.data.backup %}

              {% if (trigger.event.data.service_data.message != 'False' and trigger.event.data.service_data.message != false) %}
                {{ ai_response }}

                {{ trigger.event.data.service_data.message }}
              {% else %}
                {{ ai_response }}
              {% endif %}
        - alias: See if Poat not muted
          if:
            - condition: state
              entity_id: input_boolean.poat_mute
              state: 'off'
          then:
            - alias: Notify Poat
              action: notify.mobile_app_poat_s_iphone_14_pro_max
              data:
                message: '{{ message }}'
                title: '{{ trigger.event.data.service_data.title }}'
                data:
                  tag: '{{ trigger.event.data.service_data.data.tag }}'
        - alias: See if Gina not muted
          if:
            - condition: state
              entity_id: input_boolean.gina_mute
              state: 'off'
          then:
            - alias: Notify Gina
              action: notify.mobile_app_gina_s_iphone_13_mini
              data:
                message: '{{ message }}'
                title: '{{ trigger.event.data.service_data.title }}'
                data:
                  tag: '{{ trigger.event.data.service_data.data.tag }}'
        - alias: Create persistent notification
          action: persistent_notification.create
          data:
            message: '{{ trigger.event.data.service_data.message }}'
            title: '{{ trigger.event.data.service_data.title }}'
            notification_id: '{{ trigger.event.data.service_data.data.tag }}'

    # if notify.family_ai is used - call notify.family with clear_notification
    # triggered if clear_notification used
    - conditions:
        - condition: trigger
          id: create-ai
        - "{{ trigger.event.data.service_data.message == 'clear_notification' }}"
      sequence:
        action: notify.family
        data:
          message: clear_notification
          data:
            tag: '{{ trigger.event.data.service_data.data.tag }}'

    # if notify.family is used - clear persistent notification
    # triggered if clear_notification used
    - conditions:
        - "{{ trigger.event.data.service_data.message == 'clear_notification' }}"
      sequence:
        action: persistent_notification.dismiss
        data:
          notification_id: '{{ trigger.event.data.service_data.data.tag }}'

mode: queued
